{"mappings":"MAAA,aAEoB,iBAAmBA,QACrCC,UAAUC,eAAiB,GAC3BD,UAAUE,iBA2LZC,SAASC,KAAKC,UAAY,Q","sources":["script.js"],"sourcesContent":["\"use strict\";\n\nlet touch_device = (('ontouchstart' in window) ||\n\t(navigator.maxTouchPoints > 0) ||\n\t(navigator.msMaxTouchPoints > 0));\n\n/* PAGE */\nfunction page_create(options) {\n\tlet page = document.createElement(\"div\");\n\t_handle_id(page, options);\n\t_handle_class(page, \"page \" + (options.center ? \"center \" : \"\"), options);\n\t_handle_styles(page, options);\n\tpage.style.flexDirection = options.type || \"column\";\n\tif(options.title) {\n\t\toptions.children.unshift(header_create({ text: options.title }));\n\t}\n\n\t_handle_children(page, options);\n\tdocument.body.appendChild(page);\n\treturn page;\n}\n\nexport function page_show(current) {\n\tlet pages = document.getElementsByClassName(\"page\");\n\tfor(let page of pages) {\n\t\tpage.style.display = (page == current) ? \"flex\" : \"none\";\n\t}\n}\n\n/* LAYOUT */\nexport function layout_create(options) {\n\tlet layout = document.createElement(\"div\");\n\t_handle_id(layout, options);\n\t_handle_class(layout, \"layout\", options);\n\tlayout.style.flexDirection = options.type || \"column\";\n\t_handle_styles(layout, options);\n\t_handle_children(layout, options);\n\n\t_handle_border(layout, options);\n\t_handle_color(layout, options);\n\treturn layout;\n}\n\n/* HEADER */\nexport function header_create(options) {\n\tlet header = document.createElement(\"p\");\n\theader.innerText = options.text || \"HEADER\";\n\t_handle_id(header, options);\n\t_handle_class(header, \"header\", options);\n\t_handle_styles(header, options);\n\theader.change = function(new_text) {\n\t\tthis.innerText = new_text;\n\t}\n\n\treturn header;\n}\n\n/* TEXT */\nexport function text_create(options) {\n\tlet text = document.createElement(\"div\");\n\ttext.innerText = options.text || \"TEXT\";\n\t_handle_id(text, options);\n\t_handle_class(text, \"text\", options);\n\t_handle_styles(text, options);\n\ttext.change = function(new_text) {\n\t\tthis.innerText = new_text;\n\t}\n\n\treturn text;\n}\n\n/* IMAGE */\nexport function image_create(options) {\n\tlet image = document.createElement(\"img\");\n\timage.alt = options.alt || \"\";\n\timage.src = options.src || \"\";\n\t_handle_id(image, options);\n\t_handle_class(image, \"image\", options);\n\t_handle_styles(image, options);\n\treturn image;\n}\n\n/* BUTTON */\nexport function button_create(options) {\n\tlet button = document.createElement(\"button\");\n\t_handle_id(button, options);\n\t_handle_class(button, \"button\", options);\n\tif(options.label) {\n\t\tbutton.innerText = options.label || \"BUTTON\";\n\t}\n\telse {\n\t\t_handle_children(button, options);\n\t}\n\n\t_handle_styles(button, options);\n\t_handle_color(button, options);\n\tif(touch_device) {\n\t\tif(options.onclick) {\n\t\t\tbutton.onclick = function() {\n\t\t\t\tsetTimeout(options.onclick, 500);\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tif(options.onclick) {\n\t\t\tbutton.onclick = options.onclick;\n\t\t}\n\t}\n\n\tbutton.change = function(newText) {\n\t\tfrontSpan.innerText = newText;\n\t}\n\n\treturn button;\n}\n\n/* FIELD */\nexport function field_create(options) {\n\tlet container = document.createElement(\"div\");\n\tcontainer.className = \"input-container\";\n\n\tlet input = document.createElement(\"input\");\n\t_handle_id(input, options);\n\t_handle_class(input, \"input\", options);\n\tinput.value = options.value || \"\";\n\tinput.placeholder = options.placeholder || \"\";\n\t_handle_color(input, options);\n\n\tlet label = document.createElement(\"label\");\n\tlabel.innerHTML = input.placeholder;\n\tlabel.className = \"label\";\n\t_handle_color(label, options);\n\n\tcontainer.appendChild(input);\n\tcontainer.appendChild(label);\n\tcontainer.set = function(new_text) {\n\t\tthis.children[0].value = new_text;\n\t}\n\n\tcontainer.get = function() {\n\t\treturn this.children[0].value;\n\t}\n\n\treturn container;\n}\n\n/* CHART */\nexport function chart_create(options) {\n\tlet chart = document.createElement(\"canvas\");\n\tchart.height = options.height || 150;\n\tchart.width = options.width || 300;\n\t_handle_id(chart, options);\n\t_handle_class(chart, \"chart\", options);\n\t_handle_styles(chart, options);\n\treturn chart;\n}\n\n/* UTIL */\nfunction _handle_styles(element, options) {\n\tif(options.style) {\n\t\tfor(let property in options.style) {\n\t\t\telement.style[property] = options.style[property];\n\t\t}\n\t}\n}\n\nfunction _handle_id(element, options) {\n\tif(options.id) {\n\t\telement.id = options.id;\n\t}\n}\n\nfunction _handle_class(element, default_class, options) {\n\telement.className = default_class + \" \" + (options.classes || \"\");\n}\n\nfunction _handle_color(element, options) {\n\telement.style.setProperty(\"--clr\", options.color || \"#FFFFFF\");\n}\n\nfunction _handle_children(element, options) {\n\tif(options.children) {\n\t\toptions.children.forEach(child => element.appendChild(child));\n\t}\n}\nfunction _handle_border(element, options) {\n\tif(options.border){\n\t\telement.className += \" border\"\n\t}\n}\n\ndocument.body.className = \"center\";\n\n"],"names":["window","navigator","maxTouchPoints","msMaxTouchPoints","document","body","className"],"version":3,"file":"script.js.map"}